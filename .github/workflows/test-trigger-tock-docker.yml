# Github Workflow that build docker images using maven Fabrik IO
name: Test trigger tock-docker

on:
  push:
    branches:
      - github_actions_ci_cd_tests
  # TODO hanlde PR events

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Fetch sources
      - uses: actions/checkout@v4

      # Prepare build environment - JAVA
      - name: Setup Java and Maven using the same version as the docker
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '23' # Based on the version used in the docker images
      # Prepare build environment - Python
      - name: Install python 3.10.6 (for gen-ai related packages)
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.6'
      # Prepare build environment - Poetry
      - name: Install poetry (for gen-ai related packages)
        uses: snok/install-poetry@v1.4.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
      - name: Create venv
        run: |
          python --version
          python -m venv .venv

      # Build tock
      - name: Build tock
        run: |
          source .venv/bin/activate # Use python venv
          mvn install

      # Package artifact for docker build

      # Trigger docker image build
#      - name: Trigger docker build
#        uses: actions/github-script@v7
#        env:
#          TOCK_DOCKER_REPO_OWNER: ${{ vars.TOCK_DOCKER_REPO_OWNER }}
#          TOCK_DOCKER_REPO_NAME: ${{ vars.TOCK_DOCKER_REPO_NAME }}
#          TOCK_DOCKER_DOCKER_BUILD_WORKFLOW_ID: ${{ vars.TOCK_DOCKER_DOCKER_BUILD_WORKFLOW_ID }}
#          TOCK_DOCKER_DOCKER_REF: ${{ vars.TOCK_DOCKER_DOCKER_REF }}
#        with:
#          github-token: ${{ secrets.TOCK_DOCKER_GITHUB_PAT }} # Fine-grained GitHub PAT that was saved as repository secret
#          script: |
#            const { TOCK_DOCKER_REPO_OWNER,
#              TOCK_DOCKER_REPO_NAME,
#              TOCK_DOCKER_DOCKER_BUILD_WORKFLOW_ID,
#              TOCK_DOCKER_DOCKER_REF
#            } = process.env
#            await github.rest.actions.createWorkflowDispatch({
#              owner: TOCK_DOCKER_REPO_OWNER,
#              repo: TOCK_DOCKER_REPO_NAME,
#              workflow_id: TOCK_DOCKER_DOCKER_BUILD_WORKFLOW_ID,
#              ref: TOCK_DOCKER_DOCKER_REF,
#              inputs: {
#                tock_version: '24.9.5'
#              }
#            })
