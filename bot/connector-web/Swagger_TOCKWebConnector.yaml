openapi: 3.0.0
info:
  description: "Swagger for the Web connector of the solution TOCK (The Open Conversation Kit). Github : https://github.com/theopenconversationkit"
  version: "1.0.0"
  title: "Swagger Web Connector TOCK"
servers:
  - url: "https://demo-bot.tock.ai/"
paths:
  /{id}:
    post:
      summary: "Send query to the bot"
      description: ""
      requestBody:
        description: "Query to be sent with user ID"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
      parameters:
        - name: id
          in: path
          description: Connector path
          required: true
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                responses:
                  - text: 'Welcome to the Chatbot :)'
                  - text: 'Hey!'
                    buttons:
                      - title: 'Help on Topic 1'
                        payload: 'help1?_previous_intent=greetings'
                      - title: 'Help on Topic 2'
                        payload: 'help2?_previous_intent=greetings'

        500:
          description: "Internal Server Error"

  /{id}/sse:
    get:
      summary: "Stream bot responses for the given user"
      parameters:
        - name: id
          in: path
          description: Connector path
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: userId to stream
          required: true
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

components:
  schemas:
    Query:
      type: "object"
      properties:
        query:
          type: "string"
          example: "Hello!"
        userId:
          type: "string"
          example: "ID_00001"

    Response:
      type: "object"
      properties:
        responses:
          type: "array"
          items:
            $ref: "#/components/schemas/Message"

    Message:
      type: "object"
      required: ["version"]
      properties:
        text:
          type: "string"
          example: "Welcome to the Chatbot :)"
        buttons:
          $ref: '#/components/schemas/Buttons'
        card:
          $ref: "#/components/schemas/Card"
        carousel:
          $ref: '#/components/schemas/Carousel'
        widget:
          $ref: "#/components/schemas/Widget"
        version:
          type: "string"
          example: "1"

    Buttons:
      type: "array"
      items:
        oneOf:
          - $ref: "#/components/schemas/PostBack"
          - $ref: "#/components/schemas/QuickReply"
          - $ref: "#/components/schemas/UrlButton"
      discriminator:
        propertyName: type
        mapping:
          postback: '#/components/schemas/PostBack'
          quick_reply: '#/components/schemas/QuickReply'
          web_url: '#/components/schemas/UrlButton'

    PostBack:
      type: "object"
      required: ["title", "type"]
      properties:
        title:
          type: "string"
          example: "Help me on Topic 1"
        payload:
          type: "string"
          example: "helpTopic1?_previous_intent=greetings"
        type:
          type: "string"
          example: "postback"

    QuickReply:
      type: "object"
      required: ["title", "type"]
      properties:
        title:
          type: "string"
          example: "Choice Topic 1"
        payload:
          type: "string"
          example: "choiceTopic1?_previous_intent=greetings"
        type:
          type: "string"
          example: "quick_reply"

    UrlButton:
      type: "object"
      required: ["title", "url", "type"]
      properties:
        title:
          type: "string"
          example: "Help me on Topic 1"
        url:
          type: "string"
          example: "http://www.sncf.com"
        type:
          type: "string"
          example: "web_url"

    Carousel:
      type: "object"
      properties:
        cards:
          type: "array"
          items:
            $ref: "#/components/schemas/Card"

    Card:
      type: "object"
      properties:
        title:
          type: "string"
          example: "Title"
        subTitle:
          type: "string"
          example: "subTitle"
        file:
          $ref: '#/components/schemas/File'
        buttons:
          $ref: "#/components/schemas/Buttons"

    File:
      type: "object"
      required: ["url", "name", "type"]
      properties:
        url:
          type: "string"
          example: "http://url1.fr/image1.jpg"
        name:
          type: "string"
          example: "name"
        type:
          type: "string"
          example: "image"

    Widget:
      type: "object"
      required: ["data", "type"]
      properties:
        data:
          type: "object"
        type:
          type: "string"

externalDocs:
  description: "TOCK Documentation"
  url: "https://doc.tock.ai/fr/"